clear, clc

mainPath = '/home/wescomp/data/N-Caltech101/'

checkpointPath = [mainPath 'network_checkpoints' filesep];

if ~exist(checkpointPath, 'dir')
    mkdir(checkpointPath)
end

imageStore = imageDatastore([mainPath 'features' filesep],...
    'IncludeSubfolders',true,'FileExtensions','.nii','LabelSource','foldernames','ReadFcn',@(x) readNifti_ncars(x,1:6,false));

[testImageStore,trainImageStore] = splitEachLabel(imageStore,15); %orig paper used 15 test samples per class

numTest = numel(testImageStore.Files)
numTrain = numel(trainImageStore.Files)

trainImageStore.ReadFcn = @(x) readNifti_ncaltech101(x,1:6,true,15);

makePretrainedNetworkGoogleNet_3d_ncaltech101 %~79.87 orig paper method (82.78 e2vid split)

%CNN
miniBatchSize  = 2^6;
validationFrequency = floor(numTrain/miniBatchSize);
options = trainingOptions('adam', ...
    'MiniBatchSize',miniBatchSize, ...
    'MaxEpochs',75, ...
    'InitialLearnRate',1e-4, ...
    'LearnRateSchedule','piecewise', ...
    'LearnRateDropFactor',0.1, ...
    'LearnRateDropPeriod',60, ...
    'ValidationData',testImageStore, ...
    'ValidationFrequency',validationFrequency, ...
    'Shuffle','every-epoch', ...
    'Plots','training-progress', ...
    'ResetInputNormalization', false, ...
    'CheckpointPath',checkpointPath,...
    'DispatchInBackground',true,...
    'Verbose',true);

[net,info] = trainNetwork(trainImageStore, lgraph, options);

[YPred,probs] = classify(net,testImageStore);
accuracy = mean(YPred == testImageStore.Labels)

save('trainedNetworks/googlenet_3d_ncaltech101_augmentation_7987acc_v1.mat','net')

