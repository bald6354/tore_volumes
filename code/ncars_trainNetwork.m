clear, clc

mainPath = '/home/wescomp/data/NCARS/'

checkpointPath = [mainPath 'network_checkpoints' filesep];

if ~exist(checkpointPath, 'dir')
    mkdir(checkpointPath)
end

testImageStore = imageDatastore([mainPath 'features' filesep 'test'],...
    'IncludeSubfolders',true,'FileExtensions','.nii','LabelSource','foldernames','ReadFcn',@(x) readNifti_ncars(x,1:6,false));

trainImageStore = imageDatastore([mainPath 'features' filesep 'train'],...
    'IncludeSubfolders',true,'FileExtensions','.nii','LabelSource','foldernames','ReadFcn',@(x) readNifti_ncars(x,1:6,false));
numTrain = numel(trainImageStore.Files);

makePretrainedNetworkGoogleNet_3d_ncars

%CNN
miniBatchSize  = 2^6;
validationFrequency = floor(numTrain/miniBatchSize);
options = trainingOptions('adam', ...
    'MiniBatchSize',miniBatchSize, ...
    'MaxEpochs',24, ...
    'InitialLearnRate',1e-4, ...
    'LearnRateSchedule','piecewise', ...
    'LearnRateDropFactor',0.5, ...
    'LearnRateDropPeriod',6, ...
    'ValidationData',testImageStore, ...
    'ValidationFrequency',validationFrequency, ...
    'Shuffle','every-epoch', ...
    'Plots','training-progress', ...
    'ResetInputNormalization', false, ...
    'CheckpointPath',checkpointPath,...
    'DispatchInBackground',true,...
    'Verbose',true);

[net,info] = trainNetwork(trainImageStore, lgraph, options);

[YPred,probs] = classify(net,testImageStore);
accuracy = mean(YPred == testImageStore.Labels)

save('trainedNetworks/googlenet_3d_ncars_2fc_noaugmentation_9777acc_v1.mat','net')

